/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */

var addTwoNumbers = function (l1, l2) {
  let previousNode = new ListNode()
  const headNode = previousNode
  let carry = 0
  let val1 = 0
  let val2 = 0
  let sum = 0
  do {
    if (l1) {
      val1 = l1.val
      l1 = l1.next
    }
    if (l2) {
      val2 = l2.val
      l2 = l2.next
    }

    sum = val1 + val2 + carry

    if (sum > 9) {
      sum -= 10
      carry = 1
    } else {
      carry = 0
    }
    const currentNode = new ListNode(sum)
    previousNode.next = currentNode
    previousNode = currentNode
    val1 = 0
    val2 = 0
  } while (l1 || l2 || carry > 0)

  return headNode.next
};
