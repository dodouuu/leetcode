/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
 
/**
 * @param {ListNode} head
 * @return {boolean}
 */
 
let oneStepNode = new ListNode
let twoStepNode = new ListNode
let hasCycle = function (head) {
  oneStepNode = head
  twoStepNode = head
 
  while (twoStepNode !== null && twoStepNode.next !== null) {
    twoStepNode = twoStepNode.next.next
    oneStepNode = oneStepNode.next
    if (oneStepNode === twoStepNode) {
      return true
    }
  }
 
  return false
}
